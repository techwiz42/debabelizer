[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "debabelizer"
version = "0.1.1b1"
description = "Universal Voice Processing Library - Breaking Down Language Barriers"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
    {name = "Peter Sisk", email = "pete@cyberiad.ai"},
]
maintainers = [
    {name = "Peter Sisk", email = "pete@cyberiad.ai"},
]
keywords = ["speech", "voice", "transcription", "synthesis", "stt", "tts", "ai", "ml"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "aiohttp>=3.8.0",
    "websockets>=10.0",
    "pydantic>=2.0.0",
    "typing-extensions>=4.0.0",
]

[project.optional-dependencies]
soniox = ["websockets>=10.0"]
deepgram = ["deepgram-sdk>=3.0.0"]
elevenlabs = ["elevenlabs>=0.2.0"]
whisper = ["openai-whisper>=20230314"]
azure = ["azure-cognitiveservices-speech>=1.30.0"]
google = [
    "google-cloud-speech>=2.0.0",
    "google-cloud-texttospeech>=2.0.0",
]
openai = ["openai>=1.0.0"]
all = [
    "websockets>=10.0",
    "deepgram-sdk>=3.0.0", 
    "elevenlabs>=0.2.0",
    "openai-whisper>=20230314",
    "azure-cognitiveservices-speech>=1.30.0",
    "google-cloud-speech>=2.0.0",
    "google-cloud-texttospeech>=2.0.0",
    "openai>=1.0.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "mkdocs>=1.4.0",
    "mkdocs-material>=9.0.0",
    "mkdocstrings[python]>=0.20.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
]

[project.urls]
"Homepage" = "https://debabelize.me"
"Bug Tracker" = "https://github.com/techwiz42/debabelizer/issues"
"Documentation" = "https://github.com/techwiz42/debabelizer#readme"
"Source Code" = "https://github.com/techwiz/debabelizer"

[project.scripts]
debabelizer = "debabelizer.cli:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
readme = {file = ["README.md"], content-type = "text/markdown"}

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip_gitignore = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "-ra -q --strict-markers"
asyncio_mode = "auto"
markers = [
    "asyncio: mark test as using asyncio",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.coverage.run]
source = ["src/debabelizer"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
